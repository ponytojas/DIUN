version: "3.8"

services:
  docker-notify:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: docker-notify
    restart: unless-stopped

    # Load environment variables from .env file
    env_file:
      - .env

    # Mount Docker socket to access host Docker daemon
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./configs/config.yaml:/etc/docker-notify/config.yaml:ro
      - ./logs:/var/log/docker-notify

    # Environment variables (these override .env file if needed)
    environment:
      - CHECK_INTERVAL=${CHECK_INTERVAL:-30m}
      - TIMEZONE=${TIMEZONE:-UTC}
      - DOCKER_SOCKET=${DOCKER_SOCKET:-unix:///var/run/docker.sock}
      - DOCKER_API_VERSION=${DOCKER_API_VERSION:-}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_USE_TLS=${SMTP_USE_TLS:-true}
      - EMAIL_FROM=${EMAIL_FROM}
      - EMAIL_TO=${EMAIL_TO}
      - EMAIL_SUBJECT=${EMAIL_SUBJECT:-Docker Image Updates}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_IDS=${TELEGRAM_CHAT_IDS}
      - TELEGRAM_PARSE_MODE=${TELEGRAM_PARSE_MODE:-HTML}
      - NOTIFICATION_CHANNELS=${NOTIFICATION_CHANNELS:-telegram}
      - MAX_CONCURRENCY=${MAX_CONCURRENCY:-10}
      - REGISTRY_TIMEOUT=${REGISTRY_TIMEOUT:-30s}
      - CHECK_LATEST=${CHECK_LATEST:-false}
      - CHECK_PRIVATE=${CHECK_PRIVATE:-true}
      - EXCLUDE_PRERELEASE=${EXCLUDE_PRERELEASE:-true}
      - EXCLUDE_WINDOWS=${EXCLUDE_WINDOWS:-true}
      - ONLY_STABLE=${ONLY_STABLE:-true}
      - INCLUDE_PATTERNS=${INCLUDE_PATTERNS:-}
      - EXCLUDE_PATTERNS=${EXCLUDE_PATTERNS:-*:latest,scratch:*}
      - ONCE_PER_UPDATE=${ONCE_PER_UPDATE:-true}
      - COOLDOWN_PERIOD=${COOLDOWN_PERIOD:-24h}
      - GROUP_UPDATES=${GROUP_UPDATES:-true}
      - MAX_UPDATES_PER_NOTIFICATION=${MAX_UPDATES_PER_NOTIFICATION:-10}
      - CONFIG_CONTENT=${CONFIG_CONTENT:-}
      - LOG_LEVEL=${LOG_LEVEL:-info}

    # Labels for container management
    labels:
      - "com.docker.compose.project=docker-notify"
      - "description=Docker image update notification service"

    # Resource limits
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: "0.5"
        reservations:
          memory: 64M
          cpus: "0.1"

    # Health check
    healthcheck:
      test: ["/docker-notify", "-test"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

    # Network configuration
    networks:
      - docker-notify-network

volumes:
  postgres-data:
    driver: local
  logs:
    driver: local

networks:
  docker-notify-network:
    driver: bridge
    name: docker-notify-net
